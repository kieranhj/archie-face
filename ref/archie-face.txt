Archie-McArchie-Face. Aka Fast Archimedes C Environment.
~~~
Or something. An Archimedes demo framework in C built on ArchieSDK.

What's missing to make this functional?

FRAMEWORK:
- Multiple source files - DONE
- Build object files and link?
- Including binary files in source, e.g. sine table. - STARTED w/ debug font
- Calling larger asm functions safely.
- Ideally re-use existing archie-verse asm libs?
- Clear BSS on init! - DONE
- Settle on types (int32_t vs i32 vs something else?) - what to use for FP?
    => int32_t is defined in <stdint.h> (standard lib for compiler)
    => i32 is a short-hand defined for ArchieSDK.
    => libfixmath uses: typedef int32_t fix16_t; for [s15.16] fixed-point definition.
    => Nick uses: typedef signed int fix; for [s15.16] FP.
    => Fixed point sqrt code uses: typedef int32_t fx16_16_t;
    => Good practice to use _t for types in C. (Presumably _s for structs.)
    => fix16_t seems the best balance of length and description and compatible with libfixmath fns when I need them.
    => Chris uses full stdint definition (and no typedefs!) unless it's an inbuilt type like int.
    => Coding style!! :P

LOOP CONTROL:
- Vsync handler - DONE
- Triple buffering - DONE

DEBUG:
- Vsync counter / frame rate - STARTED
- Raster timing - DONE
- Debug key presses - DONE
- Debug variables - DONE
- Debug messages displayed to screen - STARTED (NEEDS OPTIMISING)
- printf to emulator log file (without slowdown) would be great! :)s

LIBS:
- Memcopy fast
- Memclr / Memset fast - STARTED
- Linked list?
- Random etc.

FIXED-POINT MATHS:
- Macros - DONE
- Sine & cosine tables + generation - DONE
- Vector lib
- Matrix lib

DRAWING:
- Points - STARTED
- Lines - STARTED
- Triangles
- Circles


Make a PC build!
=> At some point create a bare-bones Archie API and implement a PC window port (using GLEW?)
- Video / screen mode
- Clear screen etc.
- Plotting points etc.
- Plotting text / debug etc.
- Keyboard / mouse input
